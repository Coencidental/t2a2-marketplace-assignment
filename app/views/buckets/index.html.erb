<% provide :head_tags do %>
    <meta name='turbolinks-visit-control' content='reload'>
<% end %>

<p>Users ordered by proximity:</p>

<% @sortedusers.each do |user| %>

<p>User: <%= user[1].user.username %></p>
<p><%= user[0].round(2) %> kilometers away</p>

<% end %>

<div id="map">

</div>


<table>
    <tr>
      <th>Name</th>
      <th>User</th>
      <th>Description</th>
    </tr>
    
    <% @sortedusers.each do |user| %>

    <% user[1].user.buckets.each do |bucket| %>
    <tr>
      <td><p><%= link_to bucket.name, bucket_path(bucket) %></p></td>
      <td><%= link_to bucket.user.username, user_profile_path(bucket.user) %></td>
      <td><p><%= bucket.description %></p></td>
    </tr>
    <% if bucket.user == current_user %>
    <tr>
      <td><%= link_to "Delete this bucket", bucket_destroy_path(bucket), :data => {:confirm => 'Are you sure?  This will delete any items in the bucket too.'} %></td>
      <td><%= link_to "Edit this bucket", edit_bucket_path(bucket) %></td>
    </tr>
    <% end %>
    <% end %>
    <% end %>
  </table>

  <script>

    var users = <%= @users.to_json.html_safe %>
    
    var place = <%= @location.to_json.html_safe %>
    var places = <%= @locations.to_json.html_safe %>;
    var iconBase = 'https://maps.google.com/mapfiles/kml/shapes/';
    let locations = [];
    var people = [];
    
    function initMap(lat, lng) {
      var myCoords = new google.maps.LatLng(lat, lng);
      var mapOptions = {
        center: myCoords,
        zoom: 16
      }
    
      var map = new google.maps.Map(document.getElementById('map'), mapOptions);
      
      for (var i = 0; i < places.length; i++) {
          locations.push({lat: places[i].latitude, lng: places[i].longitude, id: (places[i].id - 1)}),
          people.push({user: users[i], id: users[i].id})
      }
      
    
    
      var markers = locations.map(function(location, i) {
        if (location.lat != place.latitude || location.lng != place.longitude) {
          return addMarker(location, map)
        } else {
          return new google.maps.Marker({
          position: location,
        })
      }
    })
        
        var markerCluster = new MarkerClusterer(
          map,
          markers,
          {
            imagePath: 'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m', 
            clusteringOptions: {
              eps: 10,
            }
          }
        )
    
    }
    
    function addMarker(place, map) {
      place.lat += Math.random() * (0.0015 - 0.001) + 0.0001;
      place.lng += Math.random() * (0.0015 - 0.001) + 0.0001;
      var marker = new google.maps.Marker({
        position: { lat: place.lat, lng: place.lng},
        map: map,
        icon: "https://upload.wikimedia.org/wikipedia/commons/c/ca/1x1.png"
      });
      var infowindow = new google.maps.InfoWindow({
        content: "<em>" + people[place.id].user.email + "</em>"
      });
    
      var circle = new google.maps.Circle({
        map: map,
        clickable: true,
        fillColor: '##3d94ff',
        radius: 75,
      });
    
      circle.bindTo('center', marker, 'position')
      infowindow.bindTo('center', marker, 'position')
    
      map.addListener('click', function() {
        infowindow.close(map)
      });
    
      circle.addListener('click', function() {
        map.setCenter(marker.getPosition());
        infowindow.open(map, marker)
      });
    
      return marker
    }
    
    document.addEventListener("DOMContentLoaded", function(){
        initMap(place.latitude, place.longitude)
    });
    
    </script>
    
    <script src="https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/markerclusterer.js" >
    </script>